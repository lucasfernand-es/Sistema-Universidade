/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import VO.Disciplina;
import VO.Professor;
import VO.VOHelper;
import controller.DisciplinaController;
import controller.ProfessorController;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author viniciuscustodio
 */
public class FormDisciplina extends javax.swing.JFrame {

    DisciplinaController disciplinaController = new DisciplinaController();
    ProfessorController professorController = new ProfessorController();
    List<Disciplina> disciplinas;
    List<Professor> professors;
    Disciplina selectedDisciplina = null;

    /**
     * Creates new form FormAluno
     */
    public FormDisciplina() {
        initComponents();
        populateTable();
        populateComboBoxProfessor();
    }

    private void populateTable() {
        this.disciplinas = DisciplinaController.searchDisciplina();

        // Atualizando a tabela
        DefaultTableModel modelAlunos = (DefaultTableModel) jTableDisciplinas.getModel();
        modelAlunos.setRowCount(0);

        this.disciplinas.stream().forEach((disciplina) -> {
            modelAlunos.addRow(new Object[]{
                disciplina.getNome(), disciplina.getPeriodo(), disciplina.getCarga_horaria(),
                disciplina.getProfessor(), disciplina.getEmenta()
            });
        });
    }

    private void populateComboBoxProfessor(){
        Professor professor =  new Professor();
        professor.setStatus(true);
        
        professors = professorController.searchProfessor(professor);

        // Atualizando o combo box
        this.jcbProfessor.removeAllItems();

        professors.stream().forEach((p) -> {
            this.jcbProfessor.addItem(p.getNome());
        });
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTableDisciplinas = new javax.swing.JTable();
        jPDisciplina = new javax.swing.JPanel();
        jlName = new javax.swing.JLabel();
        jlCourse = new javax.swing.JLabel();
        jcbProfessor = new javax.swing.JComboBox<>();
        jtNome = new javax.swing.JTextField();
        jlPeriod = new javax.swing.JLabel();
        jcbPeriodo = new javax.swing.JComboBox<>();
        jbRegister = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jbUpdate = new javax.swing.JButton();
        jcbCargaHorária = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTAEmenta = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jcbStatus = new javax.swing.JComboBox<>();
        jbDelete = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jTableDisciplinas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Nome", "Período", "Carga Horária", "Professor", "Ementa"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableDisciplinas.getTableHeader().setReorderingAllowed(false);
        jTableDisciplinas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableDisciplinasMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableDisciplinas);

        jPDisciplina.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Disciplina", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 12), new java.awt.Color(51, 0, 255))); // NOI18N
        jPDisciplina.setForeground(new java.awt.Color(51, 0, 255));

        jlName.setText("Nome:");

        jlCourse.setText("Professor:");

        jtNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtNomeActionPerformed(evt);
            }
        });

        jlPeriod.setText("Periodo:");

        jcbPeriodo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" }));

        jbRegister.setText("Cadastrar");
        jbRegister.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbRegisterActionPerformed(evt);
            }
        });

        jLabel1.setText("Ementa:");

        jLabel2.setText("Carga Horária:");

        jbUpdate.setText("Alterar");
        jbUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbUpdateActionPerformed(evt);
            }
        });

        jcbCargaHorária.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" }));

        jTAEmenta.setColumns(20);
        jTAEmenta.setRows(5);
        jScrollPane2.setViewportView(jTAEmenta);

        jLabel3.setText("Status:");

        jcbStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ativo", "Inativo" }));

        javax.swing.GroupLayout jPDisciplinaLayout = new javax.swing.GroupLayout(jPDisciplina);
        jPDisciplina.setLayout(jPDisciplinaLayout);
        jPDisciplinaLayout.setHorizontalGroup(
            jPDisciplinaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPDisciplinaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPDisciplinaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(jlName)
                    .addComponent(jlCourse))
                .addGroup(jPDisciplinaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPDisciplinaLayout.createSequentialGroup()
                        .addGroup(jPDisciplinaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPDisciplinaLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jtNome))
                            .addGroup(jPDisciplinaLayout.createSequentialGroup()
                                .addGap(11, 11, 11)
                                .addComponent(jcbProfessor, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPDisciplinaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPDisciplinaLayout.createSequentialGroup()
                                .addComponent(jlPeriod)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jcbPeriodo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(51, 51, 51)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jcbCargaHorária, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPDisciplinaLayout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jcbStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPDisciplinaLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPDisciplinaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPDisciplinaLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jbRegister)
                                .addGap(18, 18, 18)
                                .addComponent(jbUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addContainerGap())
        );
        jPDisciplinaLayout.setVerticalGroup(
            jPDisciplinaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPDisciplinaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPDisciplinaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlName)
                    .addComponent(jtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlPeriod)
                    .addComponent(jcbPeriodo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcbCargaHorária, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(9, 9, 9)
                .addGroup(jPDisciplinaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlCourse)
                    .addComponent(jcbProfessor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPDisciplinaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jcbStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3)))
                .addGap(18, 18, 18)
                .addGroup(jPDisciplinaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPDisciplinaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbUpdate)
                    .addComponent(jbRegister))
                .addContainerGap())
        );

        jbDelete.setText("Deletar");
        jbDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 848, Short.MAX_VALUE)
                    .addComponent(jPDisciplina, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jbDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPDisciplina, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbRegisterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbRegisterActionPerformed
        Disciplina disciplina = VOHelper.createDisciplinaVO(
                this.jtNome.getText(),
                Integer.parseInt( this.jcbPeriodo.getSelectedItem().toString() ),
                Integer.parseInt ( this.jcbCargaHorária.getSelectedItem().toString() ),
                this.jTAEmenta.getText(),
                this.professors.get( this.jcbProfessor.getSelectedIndex()),
                this.jcbStatus.getSelectedItem().toString()
                
        );
        
        showMessage(disciplinaController.registrarDisciplina(disciplina), "insert");
    }//GEN-LAST:event_jbRegisterActionPerformed

    private void jTableDisciplinasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableDisciplinasMouseClicked
        
        this.selectedDisciplina = this.disciplinas.get(jTableDisciplinas.getSelectedRow());

        
        
        this.jtNome.setText( selectedDisciplina.getNome() );
        this.jcbPeriodo.setSelectedItem( selectedDisciplina.getPeriodo() );
        this.jcbCargaHorária.setSelectedItem( selectedDisciplina.getCarga_horaria());
        
        this.jTAEmenta.setText( selectedDisciplina.getEmenta() );
        
        this.jcbProfessor.setSelectedIndex( professorController.searchProfessor(this.professors, selectedDisciplina.getProfessor()) );

        jcbStatus.setSelectedItem( this.selectedDisciplina.isStatusString() );
    }//GEN-LAST:event_jTableDisciplinasMouseClicked

    private void jbUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbUpdateActionPerformed
        Disciplina disciplina = VOHelper.createDisciplinaVO(
                this.jtNome.getText(),
                Integer.parseInt( this.jcbPeriodo.getSelectedItem().toString() ),
                Integer.parseInt ( this.jcbCargaHorária.getSelectedItem().toString() ),
                this.jTAEmenta.getText(),
                this.professors.get( this.jcbProfessor.getSelectedIndex() ),
                this.jcbStatus.getSelectedItem().toString()
        );
        
        disciplina.setId_disciplina(this.selectedDisciplina.getId_disciplina());
        

        if(this.selectedDisciplina != null)
            showMessage(disciplinaController.updateDisciplina(disciplina), "update");
    }//GEN-LAST:event_jbUpdateActionPerformed

    private void jbDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbDeleteActionPerformed
        /*
        if(this.selectedDisciplina != null)
            showMessage(disciplinaController.deleteDisciplina(selectedDisciplina), "remove");
        */
        this.selectedDisciplina.setStatus( false );
        showMessage(disciplinaController.updateDisciplina(selectedDisciplina), "remove");
        // TODO add your handling code here:
    }//GEN-LAST:event_jbDeleteActionPerformed

    private void jtNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtNomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtNomeActionPerformed

    private void showMessage(Boolean b, String type) {
        String title = null, message = null;
        switch (type) {
            case "insert":
                title = "Cadastrar";
                message = "cadastrado";
                break;
            case "update":
                title = "Alterar";
                message = "alterado";
                break;
            case "remove":
                title = "Deletar";
                message = "deletado";
                break;
        }

        if (b) {
            JOptionPane.showMessageDialog(null, "Disciplina " + message + " com sucesso", title, JOptionPane.INFORMATION_MESSAGE);
            populateTable();
        } else {
            JOptionPane.showMessageDialog(null, "Disciplina  " + message, title, JOptionPane.ERROR_MESSAGE);
        }
    }

    public static void query(boolean bool, String type) {

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormDisciplina.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormDisciplina.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormDisciplina.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormDisciplina.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormDisciplina().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPDisciplina;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTAEmenta;
    private javax.swing.JTable jTableDisciplinas;
    private javax.swing.JButton jbDelete;
    private javax.swing.JButton jbRegister;
    private javax.swing.JButton jbUpdate;
    private javax.swing.JComboBox<String> jcbCargaHorária;
    private javax.swing.JComboBox<String> jcbPeriodo;
    private javax.swing.JComboBox<String> jcbProfessor;
    private javax.swing.JComboBox<String> jcbStatus;
    private javax.swing.JLabel jlCourse;
    private javax.swing.JLabel jlName;
    private javax.swing.JLabel jlPeriod;
    private javax.swing.JTextField jtNome;
    // End of variables declaration//GEN-END:variables
}
